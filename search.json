[{"path":"https://dbca-wa.github.io/mpaviewer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 DBCA Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Florian Mayer. Maintainer, author.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mayer F (2022). mpaviewer: MPA Viewer. https://github.com/dbca-wa/mpaviewer, https://dbca-wa.github.io/mpaviewer/.","code":"@Manual{,   title = {mpaviewer: MPA Viewer},   author = {Florian Mayer},   year = {2022},   note = {https://github.com/dbca-wa/mpaviewer, https://dbca-wa.github.io/mpaviewer/}, }"},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"mpaviewer","dir":"","previous_headings":"","what":"MPA Viewer","title":"MPA Viewer","text":"mpaviewer dashboard marine monitoring data DBCA staff.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"architecture","dir":"","previous_headings":"","what":"Architecture","title":"MPA Viewer","text":"Data loaded locally saved .rds file, freshly loaded Google Drive DBCA data catalogue (saved .rds). locally saved file lives persistent volume.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"MPA Viewer","text":"dashboard runs single mpa_data.rds R save file produced range source data files (CSV, TXT, SHP).","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"current-data-etl","dir":"","previous_headings":"Data","what":"Current data ETL","title":"MPA Viewer","text":"Archived DBCA data catalogue dataset mpaviewer : * link Google Drive folder contains copy source data files folder/file/data structure expected mpaviewer::generate_data(). * Links deployed dashboard GitHub code repository * mpaviewer data file mpa_data.rds specific resource ID expected mpaviewer::download_data().","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"update-source-data","dir":"","previous_headings":"Data > Current data ETL","what":"Update source data","title":"MPA Viewer","text":"Data owners can update Google Drive folder new data.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"generate-dashboard-data","dir":"","previous_headings":"Data > Current data ETL","what":"Generate dashboard data","title":"MPA Viewer","text":"Whenever source data updated, analyst must download contents Google Drive folder “mpaviewer” directory inst/data local clone mpaviewer codebase run mpaviewer::generate_data(), upload data file mpa_data.rds DBCA data catalogue.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"update-the-dashboard-with-new-data","dir":"","previous_headings":"Data > Current data ETL","what":"Update the dashboard with new data","title":"MPA Viewer","text":"maintainer accesses running mpaviewer Docker container shell, runs R, executes mpaviewer::download_data(data_dir=\"/app/inst/data\").","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"ideal-data-etl","dir":"","previous_headings":"Data","what":"Ideal data ETL","title":"MPA Viewer","text":"second Docker container run mpaviewer::download_data(data_dir=\"/app/inst/data\") cronjob, following example. container also run R scripts, e.g. scripts downloading source data DBCA data catalogue, running mpaviewer::generate_data() downloaded copies. downloading, processing, uploading data can split another R package remain mpaviewer. Data owners automate data pipelines scripting upload source data data catalogue, e.g. using R.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"MPA Viewer","text":"mpaviewer RShiny app using Shiny modules, developed using golem. commands develop new functionality dev/02_dev.R.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"release","dir":"","previous_headings":"","what":"Release","title":"MPA Viewer","text":"app Docker image work, create new version, tag, push tag.","code":"styler::style_pkg() spelling::spell_check_package() spelling::update_wordlist()  # Code and docs tested, working, committed usethis::use_version(which=\"patch\") usethis::use_version(which=\"minor\") usethis::use_version(which=\"major\") usethis::edit_file(\"NEWS.md\")  # Document to load new package version. Git commit, tag, and push. devtools::document() v <- packageVersion(\"mpaviewer\") system(glue::glue(\"git tag -a v{v} -m 'v{v}'\")) system(glue::glue(\"git push && git push --tags\"))"},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"deployment","dir":"","previous_headings":"","what":"Deployment","title":"MPA Viewer","text":"GitHub Actions configured build new Docker image every tag starting “v”, “v1.0.0”. images pushed GitHub container registry ghcr.io. DBCA maintainer mpaviewer updates tag number (e.g. 1.0.0) image run Kubernetes, trigger hot reload image. commands deploy new version dev/03_deploy.R.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_sr.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a legend to a Leaflet map — add_legend_sr","title":"Add a legend to a Leaflet map — add_legend_sr","text":"function wraps leaflet::addLegend defaults.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_sr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a legend to a Leaflet map — add_legend_sr","text":"","code":"add_legend_sr(map, colors, labels, sizes, opacity = 1, group)"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_sr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a legend to a Leaflet map — add_legend_sr","text":"map Leaflet map object colors string colours, e.g. c(\"black\", \"yellow\", \"yellow\"). labels list labels, e.g. c(0:10). sizes list sizes, e.g. c(5, 20, 40). opacity legend's opacity decimal number 0 1, default: 1. group string containing intended layer name, e.g. \"Species richness\".","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_sr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a legend to a Leaflet map — add_legend_sr","text":"output leaflet::addLegend.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_ta.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a legend to a Leaflet map — add_legend_ta","title":"Add a legend to a Leaflet map — add_legend_ta","text":"function wraps leaflet::addLegend defaults.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_ta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a legend to a Leaflet map — add_legend_ta","text":"","code":"add_legend_ta(map, colors, labels, sizes, opacity = 1, group)"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_ta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a legend to a Leaflet map — add_legend_ta","text":"map Leaflet map object colors string colours, e.g. c(\"black\", \"yellow\", \"yellow\"). labels list labels, e.g. c(0:10). sizes list sizes, e.g. c(5, 20, 40). opacity legend's opacity decimal number 0 1, default: 1. group string containing intended layer name, e.g. \"Total abundance\".","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_ta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a legend to a Leaflet map — add_legend_ta","text":"output leaflet::addLegend.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/download_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the application data file mpa_data.rds from CKAN — download_data","title":"Download the application data file mpa_data.rds from CKAN — download_data","text":"method can configured point data file environment variables. work defaults unless location data file changes.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/download_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the application data file mpa_data.rds from CKAN — download_data","text":"","code":"download_data(   ckan_url = Sys.getenv(\"CKAN_URL\", unset = \"https://data.dbca.wa.gov.au\"),   data_rid = Sys.getenv(\"MPAVIEWER_RID\", unset =     \"29183116-2409-4213-90c7-69f00888f280\"),   data_dir = here::here(\"inst/data\") )"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/download_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the application data file mpa_data.rds from CKAN — download_data","text":"ckan_url data catalogue URL, default: Sys.getenv(\"CKAN_URL\") current DBCA CKAN server. data_rid resource ID data file, default: Sys.getenv(\"MPAVIEWER_RID\") current resource ID. data_dir local directory download files , default: ::(\"inst/data\").","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/download_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the application data file mpa_data.rds from CKAN — download_data","text":"None.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/download_source_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download source data files from CKAN to the local data directory — download_source_data","title":"Download source data files from CKAN to the local data directory — download_source_data","text":"method can configured point data file environment variables. work defaults unless location data file changes.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/download_source_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download source data files from CKAN to the local data directory — download_source_data","text":"","code":"download_source_data(   ckan_url = Sys.getenv(\"CKAN_URL\", unset = \"https://data.dbca.wa.gov.au\"),   data_dir = here::here(\"inst/data\") )"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/download_source_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download source data files from CKAN to the local data directory — download_source_data","text":"ckan_url data catalogue URL, default: Sys.getenv(\"CKAN_URL\") current DBCA CKAN server. data_dir local directory download files , default: ::(\"inst/data\").","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/download_source_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download source data files from CKAN to the local data directory — download_source_data","text":"None.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate one data object to use in server.R — generate_data","title":"Generate one data object to use in server.R — generate_data","text":"Generate one data object use server.R","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate one data object to use in server.R — generate_data","text":"","code":"generate_data(save = TRUE, dest = here::here(\"inst/data/mpa_data.rds\"))"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate one data object to use in server.R — generate_data","text":"save Boolean whether save data rds dest target file save rds , default: ::(\"inst/data/mpa_data.rds\")","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate one data object to use in server.R — generate_data","text":"object class \"mpa_data\" containing data tibbles objects used server.R","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate one data object to use in server.R — generate_data","text":"","code":"if (FALSE) { x <- generate_data(save = FALSE) # only returns data x <- generate_data() # returns data and saves data to local file }"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/ggplot_mpatheme.html","id":null,"dir":"Reference","previous_headings":"","what":"A custom GGplot2 theme for mpaviewer — ggplot_mpatheme","title":"A custom GGplot2 theme for mpaviewer — ggplot_mpatheme","text":"custom GGplot2 theme mpaviewer","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/ggplot_mpatheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A custom GGplot2 theme for mpaviewer — ggplot_mpatheme","text":"","code":"ggplot_mpatheme()"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/ggplot_mpatheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A custom GGplot2 theme for mpaviewer — ggplot_mpatheme","text":"custom ggplot2::theme()","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/leaflet_basemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Leaflet basemap for Western Australia — leaflet_basemap","title":"Create a Leaflet basemap for Western Australia — leaflet_basemap","text":"Create Leaflet basemap Western Australia","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/leaflet_basemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Leaflet basemap for Western Australia — leaflet_basemap","text":"","code":"leaflet_basemap(data = NULL, l_width = NULL, l_height = NULL)"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/leaflet_basemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Leaflet basemap for Western Australia — leaflet_basemap","text":"data map data, default: NULL l_width leaflet map width, default: NULL l_height leaflet map height, default: NULL","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/leaflet_basemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Leaflet basemap for Western Australia — leaflet_basemap","text":"Leaflet map focused WA","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/leaflet_basemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Leaflet basemap for Western Australia — leaflet_basemap","text":"","code":"leaflet_basemap()  {\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"fullscreenControl\":{\"position\":\"topleft\",\"pseudoFullscreen\":true}},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",null,\"Basemap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap.Mapnik\",null,\"Basemap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"opacity\":0.35,\"detectRetina\":false}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":200,\"metric\":true,\"imperial\":false,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addMiniMap\",\"args\":[null,null,\"bottomright\",150,150,19,19,-5,false,false,false,true,false,false,{\"color\":\"#ff7800\",\"weight\":1,\"clickable\":false},{\"color\":\"#000000\",\"weight\":1,\"clickable\":false,\"opacity\":0,\"fillOpacity\":0},{\"hideText\":\"Hide MiniMap\",\"showText\":\"Show MiniMap\"},[]]}],\"setView\":[[-20,130],5,[]]},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/make_docker.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and push Docker images — make_docker","title":"Build and push Docker images — make_docker","text":"Build push Docker images","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/make_docker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and push Docker images — make_docker","text":"","code":"make_docker()"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/mpaviewer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mpaviewer: MPA Viewer — mpaviewer-package","title":"mpaviewer: MPA Viewer — mpaviewer-package","text":"mpaviewer interactive dashboard Western Australian marine monitoring data, hosted https://mpaviewer.dbca.wa.gov.au/.","code":""},{"path":[]},{"path":"https://dbca-wa.github.io/mpaviewer/reference/mpaviewer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mpaviewer: MPA Viewer — mpaviewer-package","text":"Maintainer: Florian Mayer Florian.Mayer@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/print.mpa_data.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 print method for 'mpa_data'. — print.mpa_data","title":"S3 print method for 'mpa_data'. — print.mpa_data","text":"Prints short representation mpa_data returned generate_data.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/print.mpa_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 print method for 'mpa_data'. — print.mpa_data","text":"","code":"# S3 method for mpa_data print(x, ...)"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/print.mpa_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 print method for 'mpa_data'. — print.mpa_data","text":"x object class mpa_data returned generate_data. ... Extra parameters print","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read DBCA CSV files — read_dbca_files_csv","title":"Read DBCA CSV files — read_dbca_files_csv","text":"Read DBCA CSV files","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read DBCA CSV files — read_dbca_files_csv","text":"","code":"read_dbca_files_csv(flnm, data_dir = here::here(\"inst/data\"))"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read DBCA CSV files — read_dbca_files_csv","text":"flnm filename data_dir data directory, default: ::(\"inst/data\").","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read DBCA CSV files — read_dbca_files_csv","text":"file contents tibble","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Read DBCA TXT files — read_dbca_files_txt","title":"Read DBCA TXT files — read_dbca_files_txt","text":"Read DBCA TXT files","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read DBCA TXT files — read_dbca_files_txt","text":"","code":"read_dbca_files_txt(flnm, data_dir = here::here(\"inst/data\"))"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read DBCA TXT files — read_dbca_files_txt","text":"flnm filename data_dir data directory, default: ::(\"inst/data\").","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_txt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read DBCA TXT files — read_dbca_files_txt","text":"file contents tibble","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See ?golem::get_golem_options details.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/news/index.html","id":"mpaviewer-005","dir":"Changelog","previous_headings":"","what":"mpaviewer 0.0.5","title":"mpaviewer 0.0.5","text":"first version real data real dashboard deployed https://mpaviewer.dbca.wa.gov.au/. data lives DBCA data catalogue generated loaded manually.","code":""}]
