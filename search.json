[{"path":"https://dbca-wa.github.io/mpaviewer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 DBCA Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Florian Mayer. Maintainer, author.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mayer F (2022). mpaviewer: MPA Viewer. https://github.com/dbca-wa/mpaviewer, https://dbca-wa.github.io/mpaviewer/.","code":"@Manual{,   title = {mpaviewer: MPA Viewer},   author = {Florian Mayer},   year = {2022},   note = {https://github.com/dbca-wa/mpaviewer, https://dbca-wa.github.io/mpaviewer/}, }"},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"mpaviewer","dir":"","previous_headings":"","what":"MPA Viewer","title":"MPA Viewer","text":"goal mpaviewer visualise marine monitoring data DBCA staff.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"architecture","dir":"","previous_headings":"","what":"Architecture","title":"MPA Viewer","text":"Data loaded locally saved .rds file, freshly loaded Google Drive DBCA data catalogue (saved .rds). locally saved file lives persistent volume.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"MPA Viewer","text":"mpaviewer RShiny app using Shiny modules, developed using golem. commands develop new functionality dev/02_dev.R.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/index.html","id":"deployment","dir":"","previous_headings":"","what":"Deployment","title":"MPA Viewer","text":"GitHub Actions configured build new Docker image every tag starting “v”, “v1.0.0”. images pushed GitHub container registry ghcr.io. DBCA maintainer mpaviewer updates tag number (e.g. 1.0.0) image run Kubernetes, trigger hot reload image. commands deploy new version dev/03_deploy.R.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_ta.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a legend to a Leaflet map — add_legend_ta","title":"Add a legend to a Leaflet map — add_legend_ta","text":"function wraps `leaflet::addLegend` defaults.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_ta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a legend to a Leaflet map — add_legend_ta","text":"","code":"add_legend_ta(map, colors, labels, sizes, opacity = 1, group)"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_ta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a legend to a Leaflet map — add_legend_ta","text":"map Leaflet map object colors string colours, e.g. `c(\"black\", \"yellow\", \"yellow\")`. labels list labels, e.g. `c(0:10)`. sizes list sizes, e.g. `c(5, 20, 40)`. opacity legend's opacity decimal number 0 1, default: `1`. group string containing intended layer name, e.g. `\"Total abundance\"`.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/add_legend_ta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a legend to a Leaflet map — add_legend_ta","text":"output `leaflet::addLegend`.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate one data object to use in server.R — generate_data","title":"Generate one data object to use in server.R — generate_data","text":"Generate one data object use server.R","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate one data object to use in server.R — generate_data","text":"","code":"generate_data(save = TRUE, dest = here::here(\"inst/data/mpa_data.rds\"))"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate one data object to use in server.R — generate_data","text":"save Boolean whether save data rds dest target file save rds , default: ::(\"inst/data/mpa_data.rds\")","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate one data object to use in server.R — generate_data","text":"object class \"mpa_data\" containing data tibbles objects   used server.R","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/generate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate one data object to use in server.R — generate_data","text":"","code":"if (FALSE) { x <- generate_data(save=FALSE) # only returns data x <- generate_data() # returns data and saves data to local file }"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/make_docker.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and push Docker images — make_docker","title":"Build and push Docker images — make_docker","text":"Build push Docker images","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/make_docker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and push Docker images — make_docker","text":"","code":"make_docker()"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/mpaviewer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mpaviewer: MPA Viewer — mpaviewer-package","title":"mpaviewer: MPA Viewer — mpaviewer-package","text":"`mpaviewer` interactive dashboard Western Australian marine monitoring data, hosted <https://mpaviewer.dbca.wa.gov.au/>.","code":""},{"path":[]},{"path":"https://dbca-wa.github.io/mpaviewer/reference/mpaviewer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mpaviewer: MPA Viewer — mpaviewer-package","text":"Maintainer: Florian Mayer Florian.Mayer@dbca.wa.gov.au","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/print.mpa_data.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 print method for 'mpa_data'. — print.mpa_data","title":"S3 print method for 'mpa_data'. — print.mpa_data","text":"Prints short representation mpa_data returned generate_data.R.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/print.mpa_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 print method for 'mpa_data'. — print.mpa_data","text":"","code":"# S3 method for mpa_data print(x, ...)"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/print.mpa_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 print method for 'mpa_data'. — print.mpa_data","text":"x object class `mpa_data` returned generate_data.R. ... Extra parameters `print`","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read DBCA CSV files — read_dbca_files_csv","title":"Read DBCA CSV files — read_dbca_files_csv","text":"Read DBCA CSV files","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read DBCA CSV files — read_dbca_files_csv","text":"","code":"read_dbca_files_csv(flnm)"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read DBCA CSV files — read_dbca_files_csv","text":"flnm filename","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read DBCA CSV files — read_dbca_files_csv","text":"file contents tibble","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Read DBCA TXT files — read_dbca_files_txt","title":"Read DBCA TXT files — read_dbca_files_txt","text":"Read DBCA TXT files","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read DBCA TXT files — read_dbca_files_txt","text":"","code":"read_dbca_files_txt(flnm)"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read DBCA TXT files — read_dbca_files_txt","text":"flnm filename","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/read_dbca_files_txt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read DBCA TXT files — read_dbca_files_txt","text":"file contents tibble","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://dbca-wa.github.io/mpaviewer/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""},{"path":"https://dbca-wa.github.io/mpaviewer/news/index.html","id":"mpaviewer-0009000","dir":"Changelog","previous_headings":"","what":"mpaviewer 0.0.0.9000","title":"mpaviewer 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
